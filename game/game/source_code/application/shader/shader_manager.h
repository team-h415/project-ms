//=========================================================
// shader_manager.h
// author:takeshi iwasawa
//=========================================================

//-------------------------------------
// include guard
//-------------------------------------
#pragma once
#ifndef __ShaderManager_H__
#define __ShaderManager_H__


//================================================================================
// クラス
//================================================================================
class Shader;
class ShaderManager
{
	public:

		//================================================================================
		// シェーダーの取得
		// 戻り値 : シェーダークラス
		// 引数1 : ファイルパス
		//================================================================================
		static Shader* Get(const std::string &file_path);

		//================================================================================
		// 全シェーダー解放
		// 戻り値 : なし
		// 引数1 : なし
		//================================================================================
		static void AllRelease(void);

	private:
		ShaderManager(void){}
		~ShaderManager(void){}

		//================================================================================
		// 変数宣言
		//================================================================================
		static std::list<Shader*>		shader_list_;		// FBXコンテナリスト
};

#endif // _FBX_MANAGER_H_